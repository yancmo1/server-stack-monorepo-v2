services:
  # Database for tracker
  db:
    image: postgres:15
    container_name: tracker-db-dev
    environment:
      POSTGRES_DB: racetracker
      POSTGRES_USER: racetracker
      POSTGRES_PASSWORD: racetracker
    ports:
      - "5433:5432"
    volumes:
      - tracker_pgdata_dev:/var/lib/postgresql/data
    restart: unless-stopped

  # Dashboard - Main monitoring interface
  dashboard:
    build:
      context: ../
      dockerfile: apps/dashboard/Dockerfile
    container_name: dashboard-dev
    ports:
      - "5550:5550"
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - DASHBOARD_USER=admin
      - DASHBOARD_PASS=fredrules
    volumes:
      - ../shared/ssl:/app/ssl:ro
      - ../shared/templates:/app/shared_templates:ro
    restart: unless-stopped

  # 5K Tracker PWA (development)
  pwa-tracker:
    build:
      context: ../apps/5k-tracker-pwa
      dockerfile: Dockerfile
    container_name: pwa-tracker-dev
    ports:
      - "5555:5555"
    entrypoint: ["bash", "/app/init_and_run.sh"]
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=1
      - TRACKER_DATABASE_URI=postgresql://racetracker:racetracker@db:5432/racetracker
    volumes:
      - ../apps/5k-tracker-pwa:/app
      - tracker_uploads_dev:/app/uploads
      - ../shared/ssl:/app/ssl:ro
    depends_on:
      - db
    restart: unless-stopped

  # Cruise Price Check
  cruise-price-check:
    build:
      context: ../apps/cruise-price-check
      dockerfile: Dockerfile
    container_name: cruise-price-check-dev
    ports:
      - "5551:5551"
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - CRUISE_DB_PATH=/app/data/cruise_prices.db
    volumes:
      - cruise_data_dev:/app/data
      - cruise_logs_dev:/app/logs
      - ../apps/cruise-price-check:/app/source:ro
      - ../shared/ssl:/app/ssl:ro
    restart: unless-stopped

  # Clan Map
  clan-map:
    build:
      context: ../apps/clan-map
      dockerfile: Dockerfile
    container_name: clan-map-dev
    ports:
      - "5552:5552"
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      # Point to local cocstack dev database
      - POSTGRES_DB=cocstack
      - POSTGRES_USER=cocuser
      - POSTGRES_PASSWORD=devpassword
      - POSTGRES_HOST=cocstack-db-dev
      - POSTGRES_PORT=5432
      # Dev secrets (override as needed)
      - CLANMAP_SECRET_KEY=dev-secret-key
      - CLANMAP_ADMIN_PASSWORD=devpass
    volumes:
      # Mount source directly over /app so code edits reflect immediately
      - ../apps/clan-map:/app
      - ../shared/ssl:/app/ssl:ro
    # Enable code auto-reload for development
    command: ["gunicorn", "--reload", "--bind", "0.0.0.0:5552", "--workers", "2", "--timeout", "30", "app:app"]
    depends_on:
      - cocstack-db-dev
    restart: unless-stopped

  # QSL Card Creator
  qsl-card-creator:
    build:
      context: ../apps/W5XY-QSL-CARD-CREATOR
      dockerfile: Dockerfile
    container_name: qsl-card-creator-dev
    ports:
      - "5553:5553"
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - QSL_DATABASE_PATH="/app/Log4OM db.SQLite"
    volumes:
      - ../apps/W5XY-QSL-CARD-CREATOR:/app/source:ro
      - ../shared/ssl:/app/ssl:ro
    restart: unless-stopped

  # Local cocstack database for clan-map development
  cocstack-db-dev:
    image: postgres:15
    container_name: cocstack-db-dev
    environment:
      POSTGRES_DB: cocstack
      POSTGRES_USER: cocuser
      POSTGRES_PASSWORD: devpassword
    ports:
      - "5445:5432"
    volumes:
      - cocstack_pgdata_dev:/var/lib/postgresql/data
      # Optional: seed initial data on first run from repo dump (if present)
      - ../cocstack_dump.sql:/docker-entrypoint-initdb.d/01_cocstack_dump.sql:ro
    restart: unless-stopped

volumes:
  tracker_pgdata_dev:
  cocstack_pgdata_dev:
  tracker_uploads_dev:
  cruise_data_dev:
  cruise_logs_dev:

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500
