services:
  coc-discord-bot:
    build: .
    container_name: coc-discord-bot
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - BOT_ENV=production
      - ADMIN_DISCORD_ID=311659929834487810
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - CLAN_TAG=${CLAN_TAG}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
      - LEADER_ROLE_ID=${LEADER_ROLE_ID}
      - SUPERCELL_API_TOKEN=${SUPERCELL_API_TOKEN}
      - SUPERCELL_API_TOKEN_DEV=${SUPERCELL_API_TOKEN_DEV}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - GMAIL_USER=${GMAIL_USER}
      - GMAIL_PASS=${GMAIL_PASS}
    volumes:
      - ./config:/app/config:ro
      - .:/app
      - ../ssl:/app/ssl:ro
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "bot.py", "--healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  postgres:
    image: postgres:15
    container_name: cocstack-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
