#!/bin/bash
# Fixed SSL Setup Script for www.yancmo.xyz
# This version includes proper rate limiting configuration

set -e  # Exit on any error

echo "=== SSL Certificate Setup for www.yancmo.xyz (Fixed) ==="
echo "This script will configure nginx to use your Cloudflare certificates"
echo ""

# Check if running as root or with sudo
if [[ $EUID -eq 0 ]]; then
    SUDO=""
else
    SUDO="sudo"
fi

# Use the certificates we found
CERT_FILE="/etc/ssl/cloudflare/yancmo.xyz.crt"
KEY_FILE="/etc/ssl/cloudflare/yancmo.xyz.key"

echo "Using certificates:"
echo "  Certificate: $CERT_FILE"
echo "  Private Key: $KEY_FILE"
echo ""

# Verify files exist
if [ ! -f "$CERT_FILE" ]; then
    echo "‚ùå Certificate file not found: $CERT_FILE"
    exit 1
fi

if [ ! -f "$KEY_FILE" ]; then
    echo "‚ùå Private key file not found: $KEY_FILE"
    exit 1
fi

echo "‚úÖ Certificate files verified"
echo ""

# Step 1: Create rate limiting configuration
echo "Step 1: Setting up rate limiting configuration..."
$SUDO tee /etc/nginx/conf.d/rate-limiting.conf > /dev/null << 'EOF'
# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
EOF

echo "‚úÖ Rate limiting configuration created"
echo ""

# Step 2: Backup current nginx configuration
echo "Step 2: Backing up current nginx configuration..."
BACKUP_FILE="/etc/nginx/sites-available/yancmo-main.backup-$(date +%Y%m%d-%H%M%S)"
$SUDO cp /etc/nginx/sites-available/yancmo-main "$BACKUP_FILE"
echo "‚úÖ Backup created: $BACKUP_FILE"
echo ""

# Step 3: Create new nginx configuration
echo "Step 3: Creating new nginx configuration..."
$SUDO tee /etc/nginx/sites-available/yancmo-main > /dev/null << EOF
# Main server configuration for www.yancmo.xyz
# Generated by SSL setup script on $(date)

# HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.yancmo.xyz yancmo.xyz;

    # SSL Configuration - Using Cloudflare Origin Certificate
    ssl_certificate $CERT_FILE;
    ssl_certificate_key $KEY_FILE;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Root location - simple placeholder page
    location = / {
        return 200 '<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>yancmo.xyz</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #f5f5f5;
            color: #333;
        }
        h1 {
            font-size: 3rem;
            margin: 0;
            font-weight: 300;
            letter-spacing: -1px;
        }
    </style>
</head>
<body>
    <h1>yancmo.xyz</h1>
</body>
</html>';
        add_header Content-Type text/html;
    }

    # 5K Race Tracker Application
    location /race-tracker/ {
        limit_req zone=general burst=20 nodelay;
        proxy_pass http://127.0.0.1:5011/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_set_header X-Forwarded-Host \$host;
        proxy_set_header X-Forwarded-Port \$server_port;
        proxy_redirect off;
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Handle uploads
        client_max_body_size 16m;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # Dashboard Application (if you have one)
    location /dashboard/ {
        limit_req zone=general burst=10 nodelay;
        proxy_pass http://127.0.0.1:8081/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_redirect off;
    }

    # Health check endpoint (restricted access)
    location /health {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        return 200 "OK";
        add_header Content-Type text/plain;
    }

    # Security: Block access to sensitive files
    location ~ /\\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \\.(htaccess|htpasswd|ini|log|sh|sql|conf)\$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name www.yancmo.xyz yancmo.xyz;
    
    # Security headers even for redirects
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://\$server_name\$request_uri;
}
EOF

echo "‚úÖ New nginx configuration created"
echo ""

# Step 4: Test nginx configuration
echo "Step 4: Testing nginx configuration..."
if $SUDO nginx -t; then
    echo "‚úÖ Nginx configuration is valid"
else
    echo "‚ùå Nginx configuration has errors. Restoring backup..."
    $SUDO cp "$BACKUP_FILE" /etc/nginx/sites-available/yancmo-main
    echo "Backup restored. Please check the error above and try again."
    exit 1
fi
echo ""

# Step 5: Reload nginx
echo "Step 5: Reloading nginx..."
if $SUDO systemctl reload nginx; then
    echo "‚úÖ Nginx reloaded successfully"
else
    echo "‚ùå Failed to reload nginx. Restoring backup..."
    $SUDO cp "$BACKUP_FILE" /etc/nginx/sites-available/yancmo-main
    $SUDO systemctl reload nginx
    exit 1
fi
echo ""

# Step 6: Verify SSL certificate
echo "Step 6: Verifying SSL setup..."
echo "Testing local connections..."

# Test local HTTP redirect
if curl -s -I http://localhost | grep -q "301"; then
    echo "‚úÖ HTTP to HTTPS redirect working"
else
    echo "‚ö†Ô∏è  HTTP redirect may not be working properly"
fi

# Test local HTTPS
if curl -s -k -I https://localhost | grep -q "200\\|301\\|302"; then
    echo "‚úÖ HTTPS server responding"
else
    echo "‚ö†Ô∏è  HTTPS server may not be responding properly"
fi

echo ""
echo "=== Setup Complete! ==="
echo ""
echo "üéâ Your SSL certificates have been configured!"
echo ""
echo "Your 5K Race Tracker is now available at:"
echo "  üìç https://www.yancmo.xyz/race-tracker/"
echo ""
echo "URLs:"
echo "  üè† Main site: https://www.yancmo.xyz/ (placeholder page)"
echo "  üèÉ Race Tracker: https://www.yancmo.xyz/race-tracker/"
echo "  üìä Dashboard: https://www.yancmo.xyz/dashboard/"
echo "  üîí All HTTP traffic redirects to HTTPS"
echo ""
echo "Next steps:"
echo "1. Ensure your Cloudflare SSL/TLS mode is set to 'Full (strict)'"
echo "2. Test your site: https://www.yancmo.xyz/race-tracker/"
echo "3. Check that DNS has propagated (may take up to 48 hours)"
echo ""
echo "Default login credentials:"
echo "  Username: admin"
echo "  Password: admin123"
echo ""
echo "Configuration backup saved as: $BACKUP_FILE"
